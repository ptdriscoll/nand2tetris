function Ball.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push constant 5
pop this 0
push constant 3
neg
pop this 3
push constant 2
pop this 4
push pointer 0
push constant 501
push constant 127
call Ball.serve 3
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.serve 0
push argument 0
pop pointer 0
push argument 1
pop this 1
push argument 2
pop this 2
push this 4
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
pop this 4
goto IF_END0
label IF_FALSE0
push constant 2
neg
pop this 4
label IF_END0
push constant 0
pop this 5
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 1
push this 2
push this 0
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 1
push constant 10
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push argument 1
gt
push this 2
push argument 2
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push constant 1
neg
call Math.multiply 2
pop this 3
goto IF_END1
label IF_FALSE1
push constant 0
return
label IF_END1
label IF_FALSE0
push this 1
push constant 501
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 2
push argument 3
gt
push this 2
push argument 4
lt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 3
push constant 1
neg
call Math.multiply 2
pop this 3
push this 5
push constant 1
add
pop this 5
push this 4
push constant 0
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 2
neg
pop this 4
label IF_FALSE4
push this 4
push constant 0
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 2
pop this 4
label IF_FALSE5
push this 2
push argument 3
push constant 10
add
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 3
neg
pop this 4
label IF_FALSE6
push this 2
push argument 4
push constant 10
sub
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 3
pop this 4
label IF_FALSE7
push this 2
push argument 3
push constant 5
add
lt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 4
neg
pop this 4
label IF_FALSE8
push this 2
push argument 4
push constant 5
sub
gt
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 4
pop this 4
label IF_FALSE9
goto IF_END3
label IF_FALSE3
push constant 0
return
label IF_END3
label IF_FALSE2
push this 2
push constant 249
push this 4
sub
gt
push this 2
push constant 5
push this 4
sub
lt
or
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push this 4
push constant 1
neg
call Math.multiply 2
pop this 4
label IF_FALSE10
push this 1
push this 3
add
pop this 1
push this 2
push this 4
add
pop this 2
push pointer 0
call Ball.show 1
pop temp 0
push constant 0
not
return
function Ball.getPosX 0
push argument 0
pop pointer 0
push this 1
return
function Ball.getPosY 0
push argument 0
pop pointer 0
push this 2
return
function Ball.getPlayerReturns 0
push argument 0
pop pointer 0
push this 5
return
function Ball.getBallDirection 1
push argument 0
pop pointer 0
push this 3
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 0
goto IF_END0
label IF_FALSE0
push constant 1
pop local 0
label IF_END0
push local 0
return
